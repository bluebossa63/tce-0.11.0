
#Workload cluster


kubectl apply -f ./auth/auth.yml

kubectl apply -k ./metallb/

#https://tanzucommunityedition.io/docs/v0.11/vsphere-monitoring-stack/

tanzu package repository add tce-repo --url projects.registry.vmware.com/tce/main:0.11.0 --namespace tanzu-package-repo-global
tanzu package install cert-manager --package-name cert-manager.community.tanzu.vmware.com --version 1.6.1 -n tanzu-package-repo-global
kubens cert-manager
kubectl create secret tls niceneasy-ca --cert=/home/daniele/CA/ca.niceneasy.ch.crt --key=/home/daniele/CA/ca.niceneasy.ch.key
kubectl apply -f cert-manager/cluster-issuer.yaml 
tanzu package install app-toolkit --package-name app-toolkit.community.tanzu.vmware.com --version 0.1.0 -f app-toolkit/values.yaml -n tanzu-package-repo-global
#tanzu package install contour --package-name contour.community.tanzu.vmware.com --version 1.20.1 --values-file contour/contour-values.yaml -n tanzu-package-repo-global 
#tanzu package install cartographer --package-name cartographer.community.tanzu.vmware.com --version 0.2.2 -n tanzu-package-repo-global
#tanzu package install fluxcd-source-controller -p fluxcd-source-controller.community.tanzu.vmware.com -v 0.21.2 -n tanzu-package-repo-global
#tanzu package install knative-serving --package-name knative-serving.community.tanzu.vmware.com --version 1.0.0 --values-file knative-serving/knative-serving-values.yml  -n tanzu-package-repo-global
#tanzu package install kpack --package-name kpack.community.tanzu.vmware.com --version 0.5.1 -f ./kpack/kpack-values.yaml -n tanzu-package-repo-global

tanzu package install cert-injection-webhook --package-name cert-injection-webhook.community.tanzu.vmware.com --version 0.1.0 -f ./cert-injection-webhook/cert-injection-webhook-config-values.yaml

tanzu package installed update kpack --package-name kpack.community.tanzu.vmware.com --version 0.5.1 -f ./kpack/kpack-values.yaml -n tanzu-package-repo-global

tanzu package install prometheus --package-name prometheus.community.tanzu.vmware.com --version 2.27.0-1 --values-file prometheus/prometheus-values.yaml
tanzu package install grafana --package-name grafana.community.tanzu.vmware.com --version 7.5.11 --values-file grafana/grafana-values.yaml


tanzu package install harbor --package-name harbor.community.tanzu.vmware.com --version 2.3.3 --values-file harbor/harbor-values.yaml


#management cluster

# https://docs.vmware.com/en/VMware-Tanzu-Kubernetes-Grid/1.3/vmware-tanzu-kubernetes-grid-13/GUID-cluster-lifecycle-secrets.html
# customizations under /home/daniele/.config/tanzu/tkg/providers/infrastructure-vsphere/ytt/   

tanzu mc create -f ./cluster-config/tph-management.yaml 
kubectl apply -f ./auth/auth.yml
kubectl apply -k ./metallb/
tanzu package repository add tce-repo --url projects.registry.vmware.com/tce/main:0.11.0 --namespace tanzu-package-repo-global
tanzu package install contour --package-name contour.community.tanzu.vmware.com --version 1.20.1 --values-file contour/contour-values.yaml 

# https://docs.vmware.com/en/VMware-vSphere/7.0/vmware-vsphere-with-tanzu/GUID-5C367B26-59B0-448F-B071-07885A47FFFB.html
kubectl apply -f ./cluster-config/tce-storage-class.yaml

tanzu package install prometheus --package-name prometheus.community.tanzu.vmware.com --version 2.27.0-1 --values-file prometheus/prometheus-values.yaml
tanzu package install grafana --package-name grafana.community.tanzu.vmware.com --version 7.5.11 --values-file grafana/grafana-values.yaml
tanzu package install harbor --package-name harbor.community.tanzu.vmware.com --version 2.3.3 --values-file harbor/harbor-values.yaml
kubectl create namespace nexus
helm install nexus-rm sonatype/nexus-repository-manager --namespace nexus -f nexus/values.yaml 
kubectl apply -f nexus/nexus-tls.yaml 
kubectl apply -f nexus/http-proxy-jenkins.yaml 
tanzu package install cartographer --package-name cartographer.community.tanzu.vmware.com --version 0.2.2
tanzu package install fluxcd-source-controller -p fluxcd-source-controller.community.tanzu.vmware.com -v 0.21.2
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

sudo cp argocd/argocd-linux-amd64 /usr/local/bin
sudo mv /usr/local/bin/argocd-linux-amd64 /usr/local/bin/argocd
sudo chown root:root /usr/local/bin/argocd
sudo chmod +x /usr/local/bin/argocd
argocd login --core

tanzu package install cert-injection-webhook --package-name cert-injection-webhook.community.tanzu.vmware.com --version 0.1.0 -f ./cert-injection-webhook/cert-injection-webhook-config-values.yaml
tanzu package install knative-serving --package-name knative-serving.community.tanzu.vmware.com --version 1.0.0 --values-file knative-serving/knative-serving-values.yml 
tanzu package install kpack --package-name kpack.community.tanzu.vmware.com --version 0.5.1 -f ./kpack/kpack-values.yaml
# see registry-creds: https://github.com/pivotal/kpack/blob/main/docs/secrets.md and https://docs.vmware.com/en/VMware-Tanzu-Kubernetes-Grid/1.5/vmware-tanzu-kubernetes-grid-15/GUID-cluster-lifecycle-secrets.html



jq -c . < ~/.docker/config.json | base64 -w0 && echo


TEKTON_VERSION=0.34.1
daniele@kubuntu:~/dev/clarity-template$ kubectl apply -f https://storage.googleapis.com/tekton-releases/pipeline/previous/v$TEKTON_VERSION/release.yaml




https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vsan.doc/GUID-CA9CF043-9434-454E-86E7-DCA9AD9B0C09.html



Troubleshooting:

tanzu package installed update pinniped --package-name pinniped.tanzu.vmware.com  --version 0.12.0+vmware.1-tkg.1 -n tkg-system

tanzu package installed update kpack --package-name kpack.community.tanzu.vmware.com --version 0.5.1 -f ./kpack/kpack-values.yaml -n tanzu-package-repo-global



 2009  ytt --file bundle/config 
 2010  kbld --file bundle --imgpkg-lock-output bundle/.imgpkg/images.yml 1>> /dev/null
 2011  imgpkg push --bundle bluebossa63/argocd-tanzu-package:0.1.0 --file bundle/

tipps and tricks:

https://docs.vmware.com/en/VMware-Tanzu-Kubernetes-Grid/1.5/vmware-tanzu-kubernetes-grid-15/GUID-tanzu-k8s-clusters-config-plans.html#resolve-local

kbld --file repo --imgpkg-lock-output repo/.imgpkg/images.yml 1>> /dev/null